<UserControl x:Class="I2MS2.UserControls.LeftSideControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prop="clr-namespace:I2MSR.Properties;assembly=I2MSR" 
             xmlns:model="clr-namespace:I2MS2.Models"
             xmlns:i="clr-namespace:I2MS2"              
             xmlns:uc="clr-namespace:I2MS2.UserControls"              
             xmlns:tr="clr-namespace:I2MS2.Translation"              
             xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="945" d:DesignWidth="320" >

    <UserControl.Resources>
        <uc:TreeLightColorConverter x:Key="_TreeLightColorConverter"/>
        <uc:TreeDarkColorConverter x:Key="_TreeDarkColorConverter"/>
    </UserControl.Resources>
    
    <Grid>
        <Border  Background="{StaticResource _brushDarkGray2}" Opacity="0.8" CornerRadius="10">
            <Border.Effect>
                <DropShadowEffect Opacity="0.5"/>
            </Border.Effect>
            <Rectangle Stroke="{StaticResource _brushBlack}" StrokeThickness="2" RadiusX="10" RadiusY="10"/>
        </Border>
        
        
        <TabControl x:Name="_tc" Margin="3,3,3,3" Style="{StaticResource I2MS_TabControlStyle3}" >
            <TabItem Header="{x:Static prop:Resources.M_Tree1}" Style="{StaticResource I2MS_TabItemStyle3}" Width="50">
                <Grid>
                    <TreeView x:Name="_tvAssetTree" AllowDrop="{Binding IsChecked, ElementName=_chkMoveable}"      
                                              PreviewMouseDoubleClick="_tvAssetTree_PreviewMouseDoubleClick"
                                              MouseLeftButtonDown="_tvAssetTree_MouseLeftButtonDown" 
                                              MouseMove="_tvAssetTree_MouseMove" 
                                              SelectedItemChanged="_tvAssetTree_SelectedItemChanged"
                                              MouseRightButtonDown="_tvAssetTree_MouseRightButtonDown"
                                              PreviewMouseRightButtonDown="_tvAssetTree_PreviewMouseRightButtonDown"
                                              Loaded="_tvAssetTree_Loaded"
                                              Drop="_tvAssetTree_Drop" Margin="0,0,0,35"
                                              >
                        <TreeView.Resources>

                            <HierarchicalDataTemplate DataType="{x:Type model:AssetTreeVM}" ItemsSource="{Binding child_list}" >
                                <StackPanel x:Name="aaa" Orientation="Horizontal"  >
                                    <ToggleButton x:Name="_tgbtnTreeExpander" Style="{DynamicResource I2MS_TreeViewExpandCollapseToggleStyle2}" Width="16" Height="16" 
                                                                    Checked="_tgbtnTreeExpander_Checked" Unchecked="_tgbtnTreeExpander_Unchecked" 
                                                                    Visibility="{Binding is_expander_visible}" Margin="-20,0,0,0"
                                                                    IsChecked="{Binding is_expanded}"/>
                                    <Grid>
                                        <Image Source="{Binding image_file_path}" Width="16" Height="16">
                                            <!--<Image.Effect >
                                                <ee:ColorToneEffect LightColor="{Binding type, Converter={StaticResource _TreeLightColorConverter}}" 
                                                                    DarkColor="{Binding type, Converter={StaticResource _TreeDarkColorConverter}}" Desaturation="0" ToneAmount="0.01"/>
                                            </Image.Effect>-->
                                        </Image>
                                        <!--알람-->
                                        <Image Visibility="{Binding on_alarm, Converter={StaticResource _Bool2VisibilityConverter}}" Source="/I2MS2;component/Icons/alert_64.png"
                                                Width="10" Height="10" >
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <EventTrigger RoutedEvent="Image.Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Image.Opacity)" RepeatBehavior="Forever" AutoReverse="True" From="1" To="0.0" Duration="0:0:1" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                    <TextBlock x:Name="text" Text="{Binding disp_name}" Margin="5,0,0,0"/>
                                    <TextBlock x:Name="alarmCount" Visibility="{Binding is_child_alarm_visible}" FontSize="8"
                                            Foreground="{StaticResource _brushRed}" 
                                            Margin="5,0,0,0" VerticalAlignment="Top">
                                        <!--<Run  Text="{Binding child_alarm_cnt}"/>-->
                                    </TextBlock>
                                    <StackPanel.ContextMenu>
                                        <ContextMenu StaysOpen="True">
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Select}" Command="{x:Static i:MainWindow.SelectCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddFavorite}" Command="{x:Static i:MainWindow.AddFavoriteCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Copy}" Command="{x:Static i:MainWindow.CopyCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Clone}" Command="{x:Static i:MainWindow.CloneCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Delete}" Command="{x:Static i:MainWindow.DeleteCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddBuilding}" Command="{x:Static i:MainWindow.AddBuildingCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditBuilding}" Command="{x:Static i:MainWindow.EditBuildingCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddFloor}" Command="{x:Static i:MainWindow.AddFloorCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditFloor}" Command="{x:Static i:MainWindow.EditFloorCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddRoom}" Command="{x:Static i:MainWindow.AddRoomCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditRoom}" Command="{x:Static i:MainWindow.EditRoomCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddRack}" Command="{x:Static i:MainWindow.AddRackCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditRack}" Command="{x:Static i:MainWindow.EditRackCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddAsset}" Command="{x:Static i:MainWindow.AddAssetCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditAsset}" Command="{x:Static i:MainWindow.EditAssetCommand}"/>
                                            <!--<MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_MoveTree}" Command="{x:Static i:MainWindow.AssetMoveTreeCommand}" IsCheckable="True"/>-->
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigRackMount}" Command="{x:Static i:MainWindow.ConfigRackMountCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ScanIC}" Command="{x:Static i:MainWindow.ScanICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigIC}" Command="{x:Static i:MainWindow.ConfigICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigSW}" Command="{x:Static i:MainWindow.ConfigSWCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_RoomRackLayout}" Command="{x:Static i:MainWindow.RoomRackLayoutCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewRack}" Command="{x:Static i:MainWindow.ViewRackCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewIC}" Command="{x:Static i:MainWindow.ViewICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewPP}" Command="{x:Static i:MainWindow.ViewPPCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewSW}" Command="{x:Static i:MainWindow.ViewSWCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewLinkDiagram}" Command="{x:Static i:MainWindow.ViewLinkDiagramCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewForm}" Command="{x:Static i:MainWindow.ViewformCommand}"/>

                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewFloorIPM}" Command="{x:Static i:MainWindow.ViewFloorIPMCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewIPM}" Command="{x:Static i:MainWindow.ViewIPMCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_SetIPM}" Command="{x:Static i:MainWindow.SetIPMCommand}"/>


                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                </StackPanel>
                            </HierarchicalDataTemplate>

                        </TreeView.Resources>

                        <TreeView.Style>
                            <StaticResource ResourceKey="I2MS_TreeViewStyle"/>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <!--<StaticResource ResourceKey="I2MS_TreeViewItemStyle"/>-->
                            <StaticResource ResourceKey="I2MS_TreeViewItemStyle2"/>
                        </TreeView.ItemContainerStyle>

                    </TreeView>
                    <TextBox x:Name="_txtSearch" Width="130" VerticalAlignment="Bottom" HorizontalAlignment="Left" Height="24" Style="{StaticResource I2MS_TextBoxStyle}" Margin="5,0,0,5" KeyDown="_txtSearch_KeyDown" TextChanged="_txtSearch_TextChanged" MaxLength="40"/>
                    <ListView x:Name="_listSearch" Height="0" Width="120" Margin="10,0,1,35" VerticalAlignment="Bottom" Background="{DynamicResource _brushDarkGray2}" BorderBrush="{x:Null}" Foreground="{DynamicResource _brushGray}" HorizontalAlignment="Left" SelectionChanged="_listSearch_SelectionChanged" >
                        <ListView.Resources>
                            <DataTemplate DataType="{x:Type model:AssetTreeVM}">
                                <Border x:Name="bd">
                                    <TextBlock x:Name="tx" Text="{Binding disp_name}"/>
                                </Border >
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource _brushMouseOverBorder}"/>
                                        <Setter Property="BorderThickness" TargetName="bd" Value="1"/>-->
                                        <Setter Property="Foreground" TargetName="tx" Value="White"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListView.Resources>
                        <!--<Border  Background="{StaticResource _brushDarkGray2}" Opacity="0.8" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5"/>
                            </Border.Effect>
                            <Rectangle Stroke="{StaticResource _brushBlack}" StrokeThickness="2" RadiusX="10" RadiusY="10"/>
                        </Border>-->
                    </ListView>
                    <Button x:Name="_btnSearch" Content="Search" Width="50" Height="24" Style="{StaticResource I2MS_SmallButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="140, 0, 0, 5" Click="_btnSearch_Click" />
                    <CheckBox x:Name="_chkMoveable" Content="Moveable" Width="100" Height="24" Style="{StaticResource I2MS_CheckBoxStyle}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="200, 0, 0, 2"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static prop:Resources.M_Tree2}" Style="{DynamicResource I2MS_TabItemStyle3}">
                <Grid>
                    <TreeView x:Name="_tvIntelligentTree" AllowDrop="true" 
                                              Loaded="_tvIntelligentTree_Loaded"
                                              MouseLeftButtonDown="_tvIntelligentTree_MouseLeftButtonDown" 
                                              MouseMove="_tvIntelligentTree_MouseMove" 
                                              SelectedItemChanged="_tvIntelligentTree_SelectedItemChanged"
                                              MouseRightButtonDown="_tvIntelligentTree_MouseRightButtonDown"
                                              Drop="_tvIntelligentTree_Drop"
                                              PreviewMouseRightButtonDown="_tvIntelligentTree_PreviewMouseRightButtonDown" PreviewMouseDoubleClick="_tvIntelligentTree_PreviewMouseDoubleClick" >
                        <TreeView.Resources>

                            <HierarchicalDataTemplate DataType="{x:Type model:AssetTreeVM}" ItemsSource="{Binding child_list}">
                                <StackPanel x:Name="aaa" Orientation="Horizontal">
                                    <ToggleButton x:Name="_tgbtn_iTreeExpander" Style="{DynamicResource I2MS_TreeViewExpandCollapseToggleStyle2}" Width="16" Height="16" 
                                                                    Checked="_tgbtn_iTreeExpander_Checked" Unchecked="_tgbtn_iTreeExpander_Unchecked" 
                                                                    Visibility="{Binding is_expander_visible}" Margin="-20,0,0,0"
                                                                    IsChecked="{Binding is_expanded}"/>
                                    <Grid>
                                        <Image Source="{Binding image_file_path}" Width="16" Height="16">
                                            <!--<Image.Effect >
                                                <ee:ColorToneEffect LightColor="{Binding type, Converter={StaticResource _TreeLightColorConverter}}" 
                                                                    DarkColor="{Binding type, Converter={StaticResource _TreeDarkColorConverter}}" Desaturation="0" ToneAmount="0.01"/>
                                            </Image.Effect>-->
                                        </Image> 
                                        <!--알람-->
                                        <Image Visibility="{Binding on_alarm, Converter={StaticResource _Bool2VisibilityConverter}}" Source="/I2MS2;component/Icons/alert_64.png"
                                                Width="10" Height="10" >
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <EventTrigger RoutedEvent="Image.Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Image.Opacity)" RepeatBehavior="Forever" AutoReverse="True" From="1" To="0.0" Duration="0:0:1" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                    <TextBlock x:Name="text" Text="{Binding disp_name}" Margin="5,0,0,0"/>
                                    <TextBlock x:Name="alarmCount" Visibility="{Binding is_child_alarm_visible}" FontSize="8"
                                            Foreground="{StaticResource _brushRed}" 
                                            Margin="5,0,0,0" VerticalAlignment="Top">
                                        <!--<Run  Text="{Binding child_alarm_cnt}"/>-->
                                    </TextBlock> 
                                    <StackPanel.ContextMenu>
                                        <ContextMenu StaysOpen="True">
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Select}" Command="{x:Static i:MainWindow.SelectCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_AddFavorite}" Command="{x:Static i:MainWindow.AddFavoriteCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Delete}" Command="{x:Static i:MainWindow.DeleteCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditAsset}" Command="{x:Static i:MainWindow.EditAssetCommand}"/>
                                            <!--<MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_MoveTree}" Command="{x:Static i:MainWindow.IntelligentMoveTreeCommand}" IsCheckable="True"/>-->
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ScanIC}" Command="{x:Static i:MainWindow.ScanICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigIC}" Command="{x:Static i:MainWindow.ConfigICCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewIC}" Command="{x:Static i:MainWindow.ViewICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewPP}" Command="{x:Static i:MainWindow.ViewPPCommand}"/>
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                </StackPanel>
                            </HierarchicalDataTemplate>

                        </TreeView.Resources>

                        <TreeView.Style>
                            <StaticResource ResourceKey="I2MS_TreeViewStyle"/>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <!--<StaticResource ResourceKey="I2MS_TreeViewItemStyle"/>-->
                            <StaticResource ResourceKey="I2MS_TreeViewItemStyle2"/>

                        </TreeView.ItemContainerStyle>

                    </TreeView>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static prop:Resources.M_Tree3}" Style="{DynamicResource I2MS_TabItemStyle3}" >
                <Grid>
                    <TreeView x:Name="_tvFavoriteTree" AllowDrop="true"   
                                              Loaded="_tvFavoriteTree_Loaded"
                                              MouseLeftButtonDown="_tvFavoriteTree_MouseLeftButtonDown" 
                                              MouseMove="_tvFavoriteTree_MouseMove" 
                                              SelectedItemChanged="_tvFavoriteTree_SelectedItemChanged"
                                              MouseRightButtonDown="_tvFavoriteTree_MouseRightButtonDown"
                                              PreviewMouseRightButtonDown="_tvFavoriteTree_PreviewMouseRightButtonDown"
                                              Drop="_tvFavoriteTree_Drop"
                                                PreviewMouseDoubleClick="_tvFavoriteTree_PreviewMouseDoubleClick">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type model:AssetTreeVM}" ItemsSource="{Binding child_list}">
                                <StackPanel x:Name="aaa" Orientation="Horizontal">
                                    <ToggleButton x:Name="_tgbtn_iTreeExpander" Style="{DynamicResource I2MS_TreeViewExpandCollapseToggleStyle2}" Width="16" Height="16" 
                                                                    Checked="_tgbtn_fTreeExpander_Checked" Unchecked="_tgbtn_fTreeExpander_Unchecked" 
                                                                    Visibility="{Binding is_expander_visible}" IsChecked="{Binding is_expanded}" Margin="-20,0,0,0"/>
                                    <Grid>
                                        <Image Source="{Binding image_file_path}" Width="16" Height="16">
                                            <!--<Image.Effect >
                                                <ee:ColorToneEffect LightColor="{Binding type, Converter={StaticResource _TreeLightColorConverter}}" 
                                                                    DarkColor="{Binding type, Converter={StaticResource _TreeDarkColorConverter}}" Desaturation="0" ToneAmount="0.01"/>
                                            </Image.Effect>-->
                                        </Image>
                                        <!--알람-->
                                        <Image Visibility="{Binding on_alarm, Converter={StaticResource _Bool2VisibilityConverter}}" Source="/I2MS2;component/Icons/alert_64.png"
                                                Width="10" Height="10">
                                            <Image.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <EventTrigger RoutedEvent="Image.Loaded">
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Image.Opacity)" RepeatBehavior="Forever" AutoReverse="True" From="1" To="0.0" Duration="0:0:1" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </Grid>
                                    <TextBlock x:Name="text" Text="{Binding disp_name}" Margin="5,0,0,0"/>
                                    <TextBlock x:Name="alarmCount" Visibility="{Binding is_child_alarm_visible}" FontSize="8"
                                            Foreground="{StaticResource _brushRed}" 
                                            Margin="5,0,0,0" VerticalAlignment="Top">
                                        <!--<Run  Text="{Binding child_alarm_cnt}"/>-->
                                    </TextBlock>
                                    <StackPanel.ContextMenu>
                                        <ContextMenu StaysOpen="True">
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Select}" Command="{x:Static i:MainWindow.SelectCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_DeleteFavorite}" Command="{x:Static i:MainWindow.DeleteFavoriteCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_EditAsset}" Command="{x:Static i:MainWindow.EditAssetCommand}"/>
                                            <!--<MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Delete}" Command="{x:Static i:MainWindow.DeleteCommand}"/>-->
                                            <!--<MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_MoveTree}" Command="{x:Static i:MainWindow.FavoriteMoveTreeCommand}" IsCheckable="True"/>-->
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ScanIC}" Command="{x:Static i:MainWindow.ScanICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigIC}" Command="{x:Static i:MainWindow.ConfigICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigSW}" Command="{x:Static i:MainWindow.ConfigSWCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewIC}" Command="{x:Static i:MainWindow.ViewICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewPP}" Command="{x:Static i:MainWindow.ViewPPCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewSW}" Command="{x:Static i:MainWindow.ViewSWCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewLinkDiagram}" Command="{x:Static i:MainWindow.ViewLinkDiagramCommand}"/>
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>
                                </StackPanel>
                            </HierarchicalDataTemplate>

                        </TreeView.Resources>

                        <TreeView.Style>
                            <StaticResource ResourceKey="I2MS_TreeViewStyle"/>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <!--<StaticResource ResourceKey="I2MS_TreeViewItemStyle"/>-->
                            <StaticResource ResourceKey="I2MS_TreeViewItemStyle2"/>

                        </TreeView.ItemContainerStyle>

                    </TreeView>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static prop:Resources.M_Tree4}" Style="{StaticResource I2MS_TabItemStyle3}">
                <Grid>
                    <TextBlock Text="{x:Static prop:Resources.C_Long_Term_Terminals}" Style="{StaticResource I2MS_SubTitleTextBlockStyle}" Margin="10,2,0,0"/>
                    <TreeView x:Name="_tvConnectionlessTree" AllowDrop="true" Margin="0,24,0,0"  
                                             >
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type model:AssetTreeVM}" ItemsSource="{Binding child_list}">
                                <StackPanel x:Name="aaa" Orientation="Horizontal">
                                    <TextBlock x:Name="text" Text="{Binding disp_name}" Margin="0,0,0,0" Width="110"/>
                                    <TextBlock Text="{Binding Path=last_activated, Mode=OneWay, StringFormat={}{0:d}, ConverterCulture={x:Static uc:LeftSideControl.CurrentCulture}}" Margin="3,0,0,0" Width="70"/>
                                    <TextBlock Text="{Binding Path=last_activated, Mode=OneWay, StringFormat={}{0:t}, ConverterCulture={x:Static uc:LeftSideControl.CurrentCulture}}" Margin="3,0,0,0"/>

                                    <!--<StackPanel.ContextMenu>
                                        <ContextMenu StaysOpen="True">
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Select}" Command="{x:Static i:MainWindow.SelectCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_DeleteFavorite}" Command="{x:Static i:MainWindow.DeleteFavoriteCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_Delete}" Command="{x:Static i:MainWindow.DeleteCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ScanIC}" Command="{x:Static i:MainWindow.ScanICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigIC}" Command="{x:Static i:MainWindow.ConfigICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ConfigSW}" Command="{x:Static i:MainWindow.ConfigSWCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewIC}" Command="{x:Static i:MainWindow.ViewICCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewPP}" Command="{x:Static i:MainWindow.ViewPPCommand}"/>
                                            <MenuItem Header="{x:Static prop:Resources.M_Tree1_Menu_ViewSW}" Command="{x:Static i:MainWindow.ViewSWCommand}"/>
                                        </ContextMenu>
                                    </StackPanel.ContextMenu>-->
                                </StackPanel>
                            </HierarchicalDataTemplate>

                        </TreeView.Resources>

                        <TreeView.Style>
                            <StaticResource ResourceKey="I2MS_TreeViewStyle"/>
                        </TreeView.Style>
                        <TreeView.ItemContainerStyle>
                            <!--<StaticResource ResourceKey="I2MS_TreeViewItemStyle"/>-->
                            <StaticResource ResourceKey="I2MS_TreeViewItemStyle2"/>

                        </TreeView.ItemContainerStyle>

                    </TreeView>
                </Grid>
            </TabItem>

        </TabControl>
        
        <ToggleButton Name="_tgbPutIn" Style="{StaticResource SideMenuPutAndPullToggleButtonStyle}" Checked="_tgbPutIn_Checked" Unchecked="_tgbPutIn_Unchecked"
                      HorizontalAlignment="Right" VerticalAlignment="Top"
                       Margin="0,15,5,0"/>
    </Grid>
</UserControl>
